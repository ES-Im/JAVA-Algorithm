import java.util.*;

public class Main {

    static int solution(int[][] board, int[] moves) {
        int cnt = 0;
        Stack<Integer> stack = new Stack<>();

        for (int i = 0; i < moves.length; i++) {
            int m = moves[i]; // 열 인덱스

            for (int j = 0; j < board.length; j++) { // 행 순회 (위에서 아래로)
                int n = board[j][m]; 
                if (n != 0) {
                    board[j][m] = 0; // 인형 뽑은 자리 0 처리
                    if (!stack.isEmpty() && stack.peek() == n) {
                        cnt += 2;
                        stack.pop();
                    } else {
                        stack.add(n);
                    }
                    break; // 인형을 집었으면 다음 move로
                }
            }
        }

        return cnt;
    }



    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[][] board = new int[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                board[i][j] = sc.nextInt();
            }
        }
        int m = sc.nextInt();
        int[] moves = new int[m];
        for (int i = 0; i < m; i++) {
            moves[i] = sc.nextInt()-1;
        }

        System.out.println(solution(board, moves));

    }

}
