// 이진트리 : 부분집합 출력 / 공집합 출력 x

public class Main {
    static int n;
    static int[] ch;

    public void DFS(int L) {
        if(L==n+1) {
            String tmp = "";
            // 1로 체크된 인덱스 번호 출력
            for (int i = 1; i <= n; i++) {
                if(ch[i] == 1)
                    tmp += (i+" ");
            }
            if(tmp.length()>0) System.out.println(tmp); // 공집합이 아닐때만 출력
        } else {
            ch[L]=1;
            DFS(L+1);   // 노드 하위 왼쪽 - 사용

            ch[L]=0;
            DFS(L+1);   // 노드 하위 오른쪽 - 사용 x
        }
    }

    public static void main(String[] args) {
        Main T = new Main();
        n=3;
        ch=new int[n+1];
        T.DFS(1);
    }

}



DFS(1)
│
├─ ch[1]=1 → DFS(2)  // 1 선택
│   ├─ ch[2]=1 → DFS(3)  // 2 선택
│   │   ├─ ch[3]=1 → DFS(4)  // 3 선택 → 출력: 1 2 3
│   │   └─ ch[3]=0 → DFS(4)  // 3 미선택 → 출력: 1 2
│   └─ ch[2]=0 → DFS(3)  // 2 미선택
│       ├─ ch[3]=1 → DFS(4) → 출력: 1 3
│       └─ ch[3]=0 → DFS(4) → 출력: 1
└─ ch[1]=0 → DFS(2)  // 1 미선택
    ├─ ch[2]=1 → DFS(3)
    │   ├─ ch[3]=1 → DFS(4) → 출력: 2 3
    │   └─ ch[3]=0 → DFS(4) → 출력: 2
    └─ ch[2]=0 → DFS(3)
        ├─ ch[3]=1 → DFS(4) → 출력: 3
        └─ ch[3]=0 → DFS(4) → 출력: (공집합, 출력 X)
