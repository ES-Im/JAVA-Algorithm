// 이진 트리 순회[부모노드(루트) - 자식 노드 / 자식 노드]
// 전위순회 : 부모 -> 왼쪽 자식 -> 오른쪽 자식 순서
// 중위순회 : 왼쪽 자식 -> 부모 -> 오른쪽 자식
// 후위순회 : 왼쪽 자식 -> 오른쪽 자식 -> 부모


class Node {
    int data;
    Node lt, rt;    // 객체 주소 저장
    public Node(int val) {
        data = val;
        lt = rt=null;
    }
}

public class Main {
    Node root;  // 최상위 부모 노드

    public void DFS(Node root) {
        if(root==null) return;
        else {
            //System.out.printf("%d ", root.data);    // 전위순회
            DFS(root.lt);
            System.out.printf("%d ", root.data);    // 중위순회
            DFS(root.rt);
        }
        //System.out.printf("%d ", root.data);    // 후위순회
    }

    public static void main(String[] args) {
        Main tree = new Main();
        tree.root = new Node(1);
        tree.root.lt = new Node(2);
        tree.root.rt = new Node(3);
        tree.root.lt.lt = new Node(4);
        tree.root.lt.rt = new Node(5);
        tree.root.rt.lt = new Node(6);
        tree.root.rt.rt = new Node(7);
        tree.DFS(tree.root);
    }

}
