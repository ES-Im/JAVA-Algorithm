import java.util.*;

public class Main {
    public int solution1(int n, int[][] arr) {
        int result = Integer.MIN_VALUE;
        int left_diagonal = 0; // 왼 > 우 대각선
        int right_diagonal = 0; // 우 > 왼 대각선
        int horizon = 0;
        int vertical = 0;

        for (int i = 0; i < n; i++) {
            int sumH = 0;
            int sumV = 0;
            for (int j = 0; j < n; j++) {
                sumH += arr[i][j];
                sumV += arr[j][i];
            }
            left_diagonal += arr[i][i];
            right_diagonal += arr[i][n-i-1];
            horizon = Math.max(sumH,horizon);
            vertical = Math.max(sumV, vertical);
        }

        result = Arrays.stream(new int[] {left_diagonal, right_diagonal
                                          ,horizon , vertical}
                              ).max().getAsInt();

        return result;
    }
    public static void main(String[] args) {
        Main t = new Main();
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        if(n > 50 || n < 2) return;
        int[][] arr = new int[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                arr[i][j] = sc.nextInt();
            }
        }
        System.out.println(t.solution1(n, arr));
    }
}


