// 이진트리 순회(BFS, 레벨탐색) : 루트에서 1회 간선을 갈 수 있는 노드들 탐색
//                             -> 2회 간선을 갈 수 있는 노드 탐색 을 하여 최단거리를 구할때 사용

//0             - 루트 노드 : Level 0
//│
//├─  1         - Level 1
//│   ├─ 3      - Level 2
//│   └─ 4      - Level 2
//├─  2         - Level 1
//│   ├─ 5      - Level 2
//│   └─ 6      - Level 2

import java.util.LinkedList;
import java.util.Queue;

class Node {
    int data;
    Node lt, rt;
    public Node(int val) {
        data = val;
        lt = rt = null;
    }
}

public class Main {
    Node root;

    public void BFS(Node root) {
        Queue<Node> q = new LinkedList<>();
        q.offer(root);
        int L = 0;
        while(!q.isEmpty()) {
            int len = q.size();
            System.out.print(L + " : ");
            for (int i = 0; i < len; i++) {
                Node current = q.poll();
                System.out.print(current.data + " ");
                if(current.lt != null) q.offer(current.lt);
                if(current.rt != null) q.offer(current.rt);
            }
            L++;
            System.out.println();
        }
    }

    public static void main(String[] args) {
        Main t = new Main();
        t.root = new Node(1);
        t.root.lt = new Node(2);
        t.root.rt = new Node(3);
        t.root.lt.lt = new Node(4);
        t.root.lt.rt = new Node(5);
        t.root.rt.lt = new Node(6);
        t.root.rt.rt = new Node(7);
        t.BFS(t.root);
    }

}
