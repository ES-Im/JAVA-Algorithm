import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
    int answer = 0;
    int[] dis = {1, -1, 5};
    int[] ch;   // 체크 배열
    Queue<Integer> Q = new LinkedList<>();

    public int BFS(int hyunsu, int target) {
        ch = new int[10001];    // 1~ 10000까지 이므로
        ch[hyunsu] = 1;
        Q.offer(hyunsu);
        int L = 0;              // 뜀박질 수

        while(!Q.isEmpty()) {
            int len = Q.size();
            for (int i = 0; i < len; i++) {
                int x = Q.poll();
                if (x == target) return L;

                for (int j = 0; j < 3; j++) {
                    int sonX = x + dis[j];
                    if(sonX >= 1 && sonX <= 10000 && ch[sonX] == 0) {   // 범위 내 방문안한 곳만 확인
                        ch[sonX] = 1;
                        Q.offer(sonX);  // 방문 안한 곳만 큐에 넣어 메모리 절약
                    }
                }
            }

            L++;
        }

        return 0;
    }

    public static void main(String[] args) {
        Main t = new Main();
        Scanner sc = new Scanner(System.in);
        int hyunsu = sc.nextInt();
        int cow = sc.nextInt();
        System.out.println(t.BFS(hyunsu, cow));

    }

}
