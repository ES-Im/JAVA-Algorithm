import java.util.ArrayList;
import java.util.Scanner;

public class Main {

  // 1. 좌측, 우측 flow 배열을 따로 만들어서 작은 값으로 넣기 
    public int[] solution1(String str, char cha) {
        int[] list = new int[str.length()];    // → 값
        int[] reverse = new int[str.length()];  // ← 값
        int[] result = new int[str.length()];
        char[] charList = str.toCharArray();

        int j = 1000;  // 첫 문자열이 대상 문자가 아닐경우를 위해 큰 값으로 시작
        int z = 1000;
        for (int i = 0; i < str.length(); i++) {
            if(charList[i] == cha) j = 0;
            if(charList[str.length()-i-1] == cha) z = 0;
            reverse[str.length()-i-1] = z;
            list[i] = j;
            j++; z++;
        }

        for (int i = 0; i < str.length(); i++) {
            result[i] = (list[i] > reverse[i])? reverse[i] : list[i];
        }
        return result;
    }
    
  // ★ 2. 좌측 flow 배열로 채운뒤, 역순으로 흘러가는 값과 비교하여 작은 값 넣기 
    public int[] solution2(String str, char cha) {
        int[] result = new int[str.length()];
        int p = 1000;

        for (int i = 0; i < str.length(); i++) {
            if(str.charAt(i) == cha) {
                p = 0;
            } else {
                p++;
            }
            result[i] = p;
        }

        for (int i = str.length() - 1; i >= 0 ; i--) {
            if(str.charAt(i) == cha) {
                p = 0;
            } else {
                p++;
                result[i] = Math.min(result[i], p);
            }
        }

        return result;
    }

    public static void main(String[] args) {
        Main t = new Main();
        Scanner sc = new Scanner(System.in);
        String str = sc.next().toLowerCase();
        char cha = sc.next().charAt(0);
        if(str.length() > 100) return;
        for (int i : t.solution1(str, cha)) {
            System.out.print(i + " ");
        }
    }
}
